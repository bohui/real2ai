# Pre-commit hooks to prevent code quality regressions
# Install: pre-commit install
# Run: pre-commit run --all-files

repos:
  # Python code formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black"]

  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        additional_dependencies: [flake8-docstrings]
        args: [--max-line-length=88, --extend-ignore=E203,W503]

  # Python security and vulnerability scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-c, pyproject.toml]

  # General file quality checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: detect-private-key

  # Prevent committing debug statements
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-no-log-warn
      - id: python-no-eval
      - id: python-check-blanket-noqa
      - id: python-check-mock-methods

  # Custom hook to prevent console.log in production code
  - repo: local
    hooks:
      - id: no-console-log
        name: Check for console.log statements
        entry: bash -c 'if grep -r "console\.log" frontend/src --exclude-dir=__tests__ --exclude="*.test.*" --exclude="logger.ts"; then echo "ERROR: Found console.log statements in production code. Use logger instead."; exit 1; fi'
        language: system
        files: \.(ts|tsx|js|jsx)$
        pass_filenames: false

      - id: no-debug-statements
        name: Check for debug statements in Python
        entry: bash -c 'if grep -r "pdb\.set_trace\|ipdb\.set_trace\|breakpoint(" backend/app --exclude-dir=tests; then echo "ERROR: Found debug statements in production code."; exit 1; fi'
        language: system
        files: \.py$
        pass_filenames: false

      - id: no-todo-fixme
        name: Check for TODO/FIXME in commit
        entry: bash -c 'if grep -r "TODO\|FIXME" backend/app --exclude-dir=tests; then echo "WARNING: Found TODO/FIXME in production code. Consider creating issues instead."; exit 1; fi'
        language: system
        files: \.py$
        pass_filenames: false
        stages: [commit]

  # Frontend hooks (if needed)
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        files: \.(ts|tsx|js|jsx|json|css|md)$
        exclude: ^(backend/|\.venv/|node_modules/)

  # Dependency scanning
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        args: [--disable-optional-telemetry]