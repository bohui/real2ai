[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "real2ai-backend"
version = "1.0.0"
description = "Real2.AI - Australian Real Estate AI Assistant Backend"
authors = [{name = "Real2.AI Team", email = "team@real2.ai"}]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    # Core Framework
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "python-multipart==0.0.6",
    # Database and ORM
    "supabase==2.15.2",
    "postgrest==1.0.2",
    # Configuration and validation
    "pydantic==2.11.7",
    "pydantic-settings==2.4.0",
    # AI and ML
    "openai==1.86.0",
    "google-genai>=1.28.0",
    "langchain==0.3.27",
    "langchain-openai==0.3.28",
    "langchain-community==0.3.27",
    "langchain-core==0.3.72",
    "langsmith==0.4.10",
    "langgraph==0.6.3",
    # File processing
    "python-magic==0.4.27",
    "pypdf==5.9.0",
    "python-docx==1.1.0",
    "unstructured==0.18.11",
    "PyMuPDF==1.24.13",
    "Pillow==10.4.0",
    # Utilities
    "python-dotenv==1.0.0",
    "redis==5.0.1",
    "websockets>=13.0.0",
    "email-validator==2.2.0",
    # Additional dependencies for scripts and testing
    "requests==2.31.0",
    "asyncpg==0.29.0",
    # Monitoring and logging
    "structlog==23.2.0",
    "sentry-sdk[fastapi]==1.38.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4,<8.0",
    "pytest-asyncio>=0.21,<1.0",
    "pytest-cov>=4.1,<5.0",
    "pytest-html==4.1.1",
    "pytest-xdist==3.5.0",
    "pytest-mock==3.12.0",
    "black==23.11.0",
    "isort==5.12.0",
    "flake8==6.1.0",
    "mypy==1.7.1",
    "pre-commit==3.6.0",
    "coverage[toml]>=7.5,<8.0",
]
test = [
    "pytest>=7.4,<8.0",
    "pytest-asyncio>=0.21,<1.0",
    "pytest-cov>=4.1,<5.0",
    "pytest-mock==3.12.0",
    "httpx>=0.28.1",
    "requests-mock==1.11.0",
    "factory-boy==3.3.0",
    "faker==20.1.0",
    "freezegun==1.2.2",
    "responses==0.24.1",
]
docs = [
    "mkdocs==1.5.3",
    "mkdocs-material==9.5.3",
    "mkdocstrings[python]==0.25.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=80",
    "--durations=10",
    "--maxfail=3",
]
markers = [
    "unit: Unit tests - fast, isolated",
    "integration: Integration tests - external dependencies",
    "e2e: End-to-end tests - full system",
    "slow: Slow running tests (>1s)",
    "auth: Authentication and authorization tests",
    "api: API endpoint tests",
    "database: Database interaction tests",
    "ai: AI/ML model tests",
    "contract: Contract analysis tests",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\\.pyi?$'
extend-exclude = '''
/(
  # directories
  \\.eggs
  | \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.tox
  | \\.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]
known_third_party = ["fastapi", "supabase", "openai", "langchain"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "supabase.*",
    "langchain.*",
    "openai.*",
    "redis.*",
]
ignore_missing_imports = true