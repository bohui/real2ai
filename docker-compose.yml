services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: real2ai-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - PYTHONPATH=/app
      - GOOGLE_APPLICATION_CREDENTIALS=/secrets/gcp_key.json
      - SUPABASE_URL=http://host.docker.internal:54321
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend/gcp_key.json:/secrets/gcp_key.json:ro
      - ./backend:/app
      - backend_data:/app/data
    depends_on:
      - redis
    networks:
      - real2ai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s


  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: real2ai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - real2ai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Celery Worker for Background Tasks
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: real2ai-celery-worker
    command: celery -A app.core.celery worker --loglevel=info --concurrency=4
    env_file:
      - .env
    environment:
      - ENVIRONMENT=development
      - PYTHONPATH=/app
      - C_FORCE_ROOT=1
      - SUPABASE_URL=http://host.docker.internal:54321
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    depends_on:
      - redis
    networks:
      - real2ai-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Dedicated OCR Worker for Gemini Processing
  celery-ocr-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: real2ai-celery-ocr-worker
    command: celery -A app.core.celery worker --loglevel=info --queues=ocr_queue,priority_queue --concurrency=2
    env_file:
      - .env
    environment:
      - ENVIRONMENT=development
      - PYTHONPATH=/app
      - C_FORCE_ROOT=1
      - WORKER_TYPE=ocr_specialist
      - GOOGLE_APPLICATION_CREDENTIALS=/secrets/gcp_key.json
      - SUPABASE_URL=http://host.docker.internal:54321
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend/gcp_key.json:/secrets/gcp_key.json:ro
      - ./backend:/app
      - backend_data:/app/data
    depends_on:
      - redis
    networks:
      - real2ai-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G  # More memory for OCR processing
        reservations:
          memory: 2G

  # Batch Processing Worker
  celery-batch-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: real2ai-celery-batch-worker
    command: celery -A app.core.celery worker --loglevel=info --queues=batch_queue --concurrency=1
    env_file:
      - .env
    environment:
      - ENVIRONMENT=development
      - PYTHONPATH=/app
      - C_FORCE_ROOT=1
      - WORKER_TYPE=batch_processor
      - SUPABASE_URL=http://host.docker.internal:54321
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    depends_on:
      - redis
    networks:
      - real2ai-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 3G
        reservations:
          memory: 1.5G

  # Celery Beat for Scheduled Tasks
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: real2ai-celery-beat
    command: celery -A app.core.celery beat --loglevel=info
    env_file:
      - .env
    environment:
      - ENVIRONMENT=development
      - PYTHONPATH=/app
      - SUPABASE_URL=http://host.docker.internal:54321
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    depends_on:
      - redis
    networks:
      - real2ai-network
    restart: unless-stopped

  # Frontend Development Server (Optional)
  frontend:
    image: node:18-alpine
    container_name: real2ai-frontend
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: sh -c "npm install && npm run dev"
    networks:
      - real2ai-network
    restart: unless-stopped
    profiles:
      - frontend-dev

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: real2ai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - real2ai-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:
    driver: local
  backend_data:
    driver: local

networks:
  real2ai-network:
    driver: bridge 